/* You can add global styles to this file, and also import other style files */
/*@import "~@angular/material/prebuilt-themes/indigo-pink.css";*/

/* Global CSS file for the entire homepage */
body {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    font-family: Raleway, sans-serif;
  }

  .logo {
    display: cover;
  }

  @import '~@angular/material/theming';
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://www.google.com/design/spec/style/color.html
$candy-app-primary: mat-palette($mat-cyan);
$candy-app-accent:  mat-palette($mat-light-blue, 300, 600, 900);

// The warn palette is optional (defaults to red).
$candy-app-warn:    mat-palette($mat-red);

// Create the theme object (a Sass map containing all of the palettes).
$candy-app-theme: mat-light-theme($candy-app-primary, $candy-app-accent, $candy-app-warn);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($candy-app-theme);

/*
 * Actual Sticky Footer Styles
 */
 .all-wrap {
  min-height: 100vh;
}
 
.page-wrap {
  display: flex;
  flex-direction: column;
  min-height: 100vh;
}
 
.content {
  flex: 1;
}
 
.cdk-overlay-pane {
  max-width: 90vw;
}
/*
 * Make the Component injected by Router Outlet full height:
 */
main {
  display: flex;
  flex-direction: column;
  > *:not(router-outlet) {
    flex: 1;
    display: block;
  }
}

.mat-spinner {
  padding: 20px 0 20px 0;
  margin: 0 auto;
}
